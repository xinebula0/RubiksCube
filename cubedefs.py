from enum import IntEnum


class Facelet(IntEnum):
    """""
    The names of the facelet positions of the cube
                  |************|
                  |*U1**U2**U3*|
                  |************|
                  |*U4**U5**U6*|
                  |************|
                  |*U7**U8**U9*|
                  |************|
     |************|************|************|************|
     |*L1**L2**L3*|*F1**F2**F3*|*R1**R2**R3*|*B1**B2**B3*|
     |************|************|************|************|
     |*L4**L5**L6*|*F4**F5**F6*|*R4**R5**R6*|*B4**B5**B6*|
     |************|************|************|************|
     |*L7**L8**L9*|*F7**F8**F9*|*R7**R8**R9*|*B7**B8**B9*|
     |************|************|************|************|
                  |************|
                  |*D1**D2**D3*|
                  |************|
                  |*D4**D5**D6*|
                  |************|
                  |*D7**D8**D9*|
                  |************|
    A cube definition string "UBL..." means for example: In position U1 we have the U-color, in position U2 we have the
    B-color, in position U3 we have the L color etc. according to the order U1, U2, U3, U4, U5, U6, U7, U8, U9, R1, R2,
    R3, R4, R5, R6, R7, R8, R9, F1, F2, F3, F4, F5, F6, F7, F8, F9, D1, D2, D3, D4, D5, D6, D7, D8, D9, L1, L2, L3, L4,
    L5, L6, L7, L8, L9, B1, B2, B3, B4, B5, B6, B7, B8, B9 of the enum constants.
    """
    U1 = 0
    U2 = 1
    U3 = 2
    U4 = 3
    U5 = 4
    U6 = 5
    U7 = 6
    U8 = 7
    U9 = 8
    R1 = 9
    R2 = 10
    R3 = 11
    R4 = 12
    R5 = 13
    R6 = 14
    R7 = 15
    R8 = 16
    R9 = 17
    F1 = 18
    F2 = 19
    F3 = 20
    F4 = 21
    F5 = 22
    F6 = 23
    F7 = 24
    F8 = 25
    F9 = 26
    D1 = 27
    D2 = 28
    D3 = 29
    D4 = 30
    D5 = 31
    D6 = 32
    D7 = 33
    D8 = 34
    D9 = 35
    L1 = 36
    L2 = 37
    L3 = 38
    L4 = 39
    L5 = 40
    L6 = 41
    L7 = 42
    L8 = 43
    L9 = 44
    B1 = 45
    B2 = 46
    B3 = 47
    B4 = 48
    B5 = 49
    B6 = 50
    B7 = 51
    B8 = 52
    B9 = 53


class Color(IntEnum):
    """ The possible colors of the cube facelets.
        Color U refers to the color of the U(p)-face etc.
        Also used to name the faces itself.
    """
    U = 0
    R = 1
    F = 2
    D = 3
    L = 4
    B = 5


class Corner(IntEnum):
    """The names of the corner positions of the cube.
        Corner URF e.g. has an U(p), a R(ight) and a F(ront) facelet.
    """
    URF = 0
    UFL = 1
    ULB = 2
    UBR = 3
    DFR = 4
    DLF = 5
    DBL = 6
    DRB = 7


class Edge(IntEnum):
    """The names of the edge positions of the cube.
        Edge UR e.g. has an U(p) and R(ight) facelet.
    """
    UR = 0
    UF = 1
    UL = 2
    UB = 3
    DR = 4
    DF = 5
    DL = 6
    DB = 7
    FR = 8
    FL = 9
    BL = 10
    BR = 11


class Move(IntEnum):
    """The moves in the faceturn metric.
        Not to be confused with the names of the facelet positions in class Facelet.
    """
    U1 = 0
    U2 = 1
    U3 = 2
    R1 = 3
    R2 = 4
    R3 = 5
    F1 = 6
    F2 = 7
    F3 = 8
    D1 = 9
    D2 = 10
    D3 = 11
    L1 = 12
    L2 = 13
    L3 = 14
    B1 = 15
    B2 = 16
    B3 = 17


class BS(IntEnum):
    """Basic symmetries of the cube.
        All 48 cube symmetries can be generated by sequences of these 4 symmetries.
    """
    ROT_URF3 = 0
    ROT_F2 = 1
    ROT_U4 = 2
    MIRR_LR2 = 3


# Map the corner positions to facelet positions.
cornerFacelet = [[Facelet.U9, Facelet.R1, Facelet.F3], 
                 [Facelet.U7, Facelet.F1, Facelet.L3], 
                 [Facelet.U1, Facelet.L1, Facelet.B3], 
                 [Facelet.U3, Facelet.B1, Facelet.R3],
                 [Facelet.D3, Facelet.F9, Facelet.R7], 
                 [Facelet.D1, Facelet.L9, Facelet.F7], 
                 [Facelet.D7, Facelet.B9, Facelet.L7], 
                 [Facelet.D9, Facelet.R9, Facelet.B7]
                 ]

# Map the edge positions to facelet positions.
edgeFacelet = [[Facelet.U6, Facelet.R2], 
               [Facelet.U8, Facelet.F2], 
               [Facelet.U4, Facelet.L2], 
               [Facelet.U2, Facelet.B2], 
               [Facelet.D6, Facelet.R8], 
               [Facelet.D2, Facelet.F8],
               [Facelet.D4, Facelet.L8], 
               [Facelet.D8, Facelet.B8], 
               [Facelet.F6, Facelet.R4], 
               [Facelet.F4, Facelet.L6], 
               [Facelet.B6, Facelet.L4], 
               [Facelet.B4, Facelet.R6]
               ]

# Map the corner positions to facelet colors.
cornerColor = [[Color.U, Color.R, Color.F],
               [Color.U, Color.F, Color.L],
               [Color.U, Color.L, Color.B],
               [Color.U, Color.B, Color.R],
               [Color.D, Color.F, Color.R],
               [Color.D, Color.L, Color.F],
               [Color.D, Color.B, Color.L],
               [Color.D, Color.R, Color.B]
               ]

# Map the edge positions to facelet colors.
edgeColor = [[Color.U, Color.R],
             [Color.U, Color.F],
             [Color.U, Color.L],
             [Color.U, Color.B],
             [Color.D, Color.R],
             [Color.D, Color.F],
             [Color.D, Color.L],
             [Color.D, Color.B],
             [Color.F, Color.R],
             [Color.F, Color.L],
             [Color.B, Color.L],
             [Color.B, Color.R]
             ]

# ###################################### some "constants" ##############################################################
N_PERM_4 = 24
N_CHOOSE_8_4 = 70
N_MOVE = 18  # number of possible face moves

N_TWIST = 2187  # 3^7 possible corner orientations in phase 1
N_FLIP = 2048  # 2^11 possible edge orientations in phase 1
N_SLICE_SORTED = 11880  # 12*11*10*9 possible positions of the FR, FL, BL, BR edges in phase 1
N_SLICE = N_SLICE_SORTED // N_PERM_4  # we ignore the permutation of FR, FL, BL, BR in phase 1
N_FLIPSLICE_CLASS = 64430  # number of equivalence classes for combined flip+slice concerning symmetry group D4h

N_U_EDGES_PHASE2 = 1680  # number of different positions of the edges UR, UF, UL and UB in phase 2
# N_D_EDGES_PHASE2 = 1680  # number of different positions of the edges DR, DF, DL and DB in phase 2
N_CORNERS = 40320  # 8! corner permutations in phase 2
N_CORNERS_CLASS = 2768  # number of equivalence classes concerning symmetry group D4h
N_UD_EDGES = 40320  # 8! permutations of the edges in the U-face and D-face in phase 2

N_SYM = 48  # number of cube symmetries of full group Oh
N_SYM_D4h = 16  # Number of symmetries of subgroup D4h
FOLDER = "twophase"  # Folder name for generated tables
